{
    "pipes": [
        {
            "name": "RemoveSpecialCharactersPipe",
            "id": "pipe-RemoveSpecialCharactersPipe-401f6982c7b41064b6c532343864665ad154cc2ec23932dd8899433cba8615cf5e13da40ab9dcf21ec121a858e7190db43791f4db6a4406aaf1038d505a189ce",
            "file": "src/app/pipes/removeSpecialCharacters.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [
                {
                    "name": "specialCharacters",
                    "defaultValue": "{\r\n    \"à\": \"a\",\r\n    \"ç\": \"c\",\r\n    \"ê\": \"e\",\r\n    \"é\": \"e\",\r\n    \"è\": \"e\",\r\n    \"ï\": \"i\",\r\n    \"ô\": \"o\",\r\n    \" \": \"-\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SpecialCharactersMap",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "removeSpecialCharacters",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nexport interface SpecialCharactersMap {\r\n  [accented: string]: string;\r\n}\r\n\r\n@Pipe({\r\n  name: 'removeSpecialCharacters',\r\n  standalone: true\r\n})\r\nexport class RemoveSpecialCharactersPipe implements PipeTransform {\r\n\r\n  private specialCharacters: SpecialCharactersMap = {\r\n    \"à\": \"a\",\r\n    \"ç\": \"c\",\r\n    \"ê\": \"e\",\r\n    \"é\": \"e\",\r\n    \"è\": \"e\",\r\n    \"ï\": \"i\",\r\n    \"ô\": \"o\",\r\n    \" \": \"-\"\r\n  }\r\n\r\n  transform(value: string, ...args: unknown[]): string {\r\n   return value.replace(new RegExp(Object.keys(this.specialCharacters).join(\"|\"), \"g\"),\r\n     (match) => this.specialCharacters[match]\r\n   )\r\n  }\r\n\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "ChecklistItem",
            "id": "interface-ChecklistItem-063e6a71abdb34b212b754ca70ef08cdf0921f3497993eedd6a9de665d1a2e5ac0d704f9f6333d6986eee8a0132e9d93ad5db745cf41b57de09c047461415f0c",
            "file": "src/app/components/checklistItem/ChecklistItem.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { LowerCasePipe, NgForOf } from \"@angular/common\";\r\nimport { RemoveSpecialCharactersPipe } from \"../../pipes/removeSpecialCharacters.pipe\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\n\r\nexport interface ChecklistItem {\r\n  name: string,\r\n  quantity: number,\r\n  checked: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-checklist-item',\r\n  standalone: true,\r\n  imports: [\r\n    NgForOf,\r\n    RemoveSpecialCharactersPipe,\r\n    LowerCasePipe,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './ChecklistItem.component.html',\r\n  styleUrl: './ChecklistItem.component.css',\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class ChecklistItemComponent {\r\n  @Input()\r\n  items: ChecklistItem[] = [];\r\n\r\n  public setVisible(item: ChecklistItem) {\r\n    item.checked = !item.checked;\r\n    document.getElementById(new RemoveSpecialCharactersPipe().transform(item.name).toLowerCase() + \"_div\")?.setAttribute(\"checked\", item.checked.toString());\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "EventInterface",
            "id": "interface-EventInterface-d85b3e9f7db5e89f0163fd9f4da18ae1aeac506fb12d5fd7cdea330c60189ecf3b563afbd0c4c52834518b504756abcba6bd5cbebf30fca39d029d99e419af57",
            "file": "src/app/components/calendar/calendar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, HostListener, ViewChild } from \"@angular/core\";\r\nimport { FullCalendarComponent, FullCalendarModule } from \"@fullcalendar/angular\";\r\nimport { CalendarOptions, EventClickArg, EventSourceInput } from \"@fullcalendar/core\";\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport frLocale from '@fullcalendar/core/locales/fr';\r\nimport { MatIcon } from \"@angular/material/icon\";\r\nimport { EventImpl, Identity } from \"@fullcalendar/core/internal\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { MatFormField } from \"@angular/material/form-field\";\r\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatInput, MatLabel } from \"@angular/material/input\";\r\nimport { provideNativeDateAdapter } from \"@angular/material/core\";\r\n\r\nexport interface EventInterface {\r\n  title: string,\r\n  date_start: Date,\r\n  date_end: Date,\r\n  location: string,\r\n  status: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  standalone: true,\r\n  imports: [\r\n    FullCalendarModule,\r\n    MatIcon,\r\n    DatePipe,\r\n    MatFormField,\r\n    MatDatepicker,\r\n    FormsModule,\r\n    MatDatepickerInput,\r\n    MatInput,\r\n    MatLabel\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    provideNativeDateAdapter()\r\n  ],\r\n  templateUrl: './calendar.component.html',\r\n  styleUrl: './calendar.component.css'\r\n})\r\nexport class CalendarComponent {\r\n  @ViewChild(\"calendar\")\r\n  calendarComponent: FullCalendarComponent = new FullCalendarComponent({} as ElementRef, {} as ChangeDetectorRef);\r\n\r\n  private calendarView: string = 'dayGridMonth'\r\n\r\n  private screenHeight : number = 0;\r\n  private screenWidth : number = 0;\r\n\r\n  protected event: EventInterface = {} as EventInterface;\r\n\r\n  protected events = [\r\n    { title: 'event 1', start: new Date(2024, 5, 7), end: new Date(2024, 5, 10), location: 'Paris', status: 'confirmed' },\r\n    { title: 'event 2', start: new Date(2024, 5, 8, 9), end: new Date(2024, 5, 8, 16) }\r\n  ];\r\n\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n\r\n  @HostListener('window:resize', ['$event']) onResize() {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    this.view()\r\n  }\r\n\r\n  private view() {\r\n    if(this.screenWidth <= 425) {\r\n      this.calendarView = 'listWeek';\r\n    } else {\r\n      this.calendarView = 'dayGridMonth';\r\n    }\r\n    this.calendarComponent.getApi().changeView(this.calendarView);\r\n  }\r\n\r\n  calendarOptions: CalendarOptions = {\r\n    contentHeight: \"auto\",\r\n    eventClick: this.handleEventClick.bind(this),\r\n    events: this.events,\r\n    handleWindowResize: false,\r\n    headerToolbar: {\r\n      start: \"title\",\r\n      center: \"\",\r\n      end: \"today prev,next dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\r\n    },\r\n    initialView: \"dayGridMonth\",\r\n    locale: frLocale,\r\n    plugins: [dayGridPlugin, listPlugin, timeGridPlugin],\r\n    timeZone: \"Europe/Paris\"\r\n  };\r\n\r\n  public setEvent(event: EventImpl) {\r\n    this.event = {title: event.title, date_start: event.start, date_end: event.end, location: event.extendedProps['location'], status: event.extendedProps['status']} as EventInterface;\r\n  }\r\n\r\n  public closeDialog() {\r\n    let dialog = document.getElementById(\"dialog\") as HTMLDialogElement;\r\n    dialog.close();\r\n  }\r\n\r\n  public handleEventClick(clickedEvent: EventClickArg) {\r\n    clickedEvent.jsEvent.preventDefault();\r\n    let coordinates = clickedEvent.el.getBoundingClientRect();\r\n    this.setEvent(clickedEvent.event);\r\n    let dialog = document.getElementById(\"dialog\") as HTMLDialogElement;\r\n    if(coordinates.left - 448 > 0) {\r\n      this.x = coordinates.left - 448;\r\n    } else {\r\n      this.x = coordinates.right;\r\n    }\r\n    if (this.screenHeight - coordinates.top < 220) {\r\n      this.y = coordinates.top - 220;\r\n    } else {\r\n      this.y = coordinates.top;\r\n    }\r\n    dialog.style.left = this.x + \"px\";\r\n    dialog.style.top = this.y + \"px\";\r\n    dialog.show();\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "date_end",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "date_start",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SelectOptions",
            "id": "interface-SelectOptions-5bbc76215a4f90e2e8fa45e5f33dc906c2ec2ccc6ce5a14b96dbec8541b7a820d71b87e64155433301ee23ed9321d599fca59537ce2377fe0360ff51c0f05f06",
            "file": "src/app/components/select/select.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { NgForOf } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nexport interface SelectOptions {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  standalone: true,\r\n  imports: [NgForOf, ReactiveFormsModule],\r\n  templateUrl: './select.component.html',\r\n  styleUrl: './select.component.css',\r\n})\r\nexport class SelectComponent {\r\n  @Input()\r\n  options: SelectOptions[] = [];\r\n\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  name: string = '';\r\n\r\n  @Input()\r\n  id: string = '';\r\n\r\n  @Input()\r\n  css: string = '';\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SpecialCharactersMap",
            "id": "interface-SpecialCharactersMap-401f6982c7b41064b6c532343864665ad154cc2ec23932dd8899433cba8615cf5e13da40ab9dcf21ec121a858e7190db43791f4db6a4406aaf1038d505a189ce",
            "file": "src/app/pipes/removeSpecialCharacters.pipe.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nexport interface SpecialCharactersMap {\r\n  [accented: string]: string;\r\n}\r\n\r\n@Pipe({\r\n  name: 'removeSpecialCharacters',\r\n  standalone: true\r\n})\r\nexport class RemoveSpecialCharactersPipe implements PipeTransform {\r\n\r\n  private specialCharacters: SpecialCharactersMap = {\r\n    \"à\": \"a\",\r\n    \"ç\": \"c\",\r\n    \"ê\": \"e\",\r\n    \"é\": \"e\",\r\n    \"è\": \"e\",\r\n    \"ï\": \"i\",\r\n    \"ô\": \"o\",\r\n    \" \": \"-\"\r\n  }\r\n\r\n  transform(value: string, ...args: unknown[]): string {\r\n   return value.replace(new RegExp(Object.keys(this.specialCharacters).join(\"|\"), \"g\"),\r\n     (match) => this.specialCharacters[match]\r\n   )\r\n  }\r\n\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-401f6982c7b41064b6c532343864665ad154cc2ec23932dd8899433cba8615cf5e13da40ab9dcf21ec121a858e7190db43791f4db6a4406aaf1038d505a189ce",
                    "args": [
                        {
                            "name": "accented",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AddEventFormPageComponent",
            "id": "component-AddEventFormPageComponent-e4444b803ead58bda090856697a15ebc3f37b625239445ac54956db1034eb521389f69e029483eb1cb1c480f9c20a74546804aeb589dcbb6e5d51ebcfc9caeed",
            "file": "src/app/pages/AddEventFormPage/AddEventFormPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "provideAnimations()"
                }
            ],
            "selector": "app-add-event-form-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./AddEventFormPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "['option 1', 'option 2', 'option 3']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "SelectComponent",
                    "type": "component"
                },
                {
                    "name": "MatInput"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "MatNativeDateModule",
                    "type": "module"
                },
                {
                    "name": "MatHint"
                },
                {
                    "name": "MatDatepickerToggle"
                },
                {
                    "name": "MatDatepicker"
                },
                {
                    "name": "MatSuffix"
                },
                {
                    "name": "MatLabel"
                },
                {
                    "name": "MatFormField"
                },
                {
                    "name": "MatAutocomplete"
                },
                {
                    "name": "MatOption"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "MatAutocompleteTrigger"
                },
                {
                    "name": "MatError"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, CUSTOM_ELEMENTS_SCHEMA } from \"@angular/core\";\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\nimport { SelectComponent } from \"../../components/select/select.component\";\r\nimport { MatFormField, MatHint, MatInput, MatInputModule, MatLabel, MatSuffix } from \"@angular/material/input\";\r\nimport {\r\n  MatDatepicker,\r\n  MatDatepickerModule,\r\n  MatDatepickerToggle\r\n} from \"@angular/material/datepicker\";\r\nimport { MatNativeDateModule, MatOption } from \"@angular/material/core\";\r\nimport { MatAutocomplete, MatAutocompleteTrigger } from \"@angular/material/autocomplete\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MatError, MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { provideAnimations } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n  selector: 'app-add-event-form-page',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    MatInput,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatHint,\r\n    MatDatepickerToggle,\r\n    MatDatepicker,\r\n    MatSuffix,\r\n    MatLabel,\r\n    MatFormField,\r\n    MatAutocomplete,\r\n    MatOption,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteTrigger,\r\n    MatError\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    provideAnimations()\r\n  ],\r\n  templateUrl: './AddEventFormPage.component.html',\r\n  styleUrl: './AddEventFormPage.component.css'\r\n})\r\nexport class AddEventFormPageComponent {\r\n\r\n  protected options: string[] = ['option 1', 'option 2', 'option 3'];\r\n\r\n}\r\n",
            "styleUrl": "./AddEventFormPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'header'\">\r\n  <a href=\"/\" [className]=\"['w-100', 'left-align']\">\r\n    <i class=\"fa-solid fa-arrow-left\"></i>\r\n  </a>\r\n  <div [className]=\"'header-container'\">\r\n    <h2>Créer un événement</h2>\r\n  </div>\r\n\r\n  <form method=\"post\">\r\n    <mat-form-field [className]=\"'form-group'\">\r\n      <mat-label>Nom de l'événement</mat-label>\r\n      <input type=\"text\" matInput id=\"event_name_input\" name=\"event_name\" required/>\r\n      <mat-error>Le nom de l'événement ne peut pas être vide.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [className]=\"'form-group'\">\r\n        <mat-label>Choisir une date de début</mat-label>\r\n        <input matInput [matDatepicker]=\"pickerStart\" required>\r\n        <mat-hint>DD/MM/YYYY</mat-hint>\r\n        <mat-datepicker-toggle matIconSuffix [for]=\"pickerStart\"></mat-datepicker-toggle>\r\n        <mat-datepicker #pickerStart></mat-datepicker>\r\n        <mat-error>La date de début ne peut être vide</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [className]=\"'form-group'\">\r\n        <mat-label>Choisir une date de fin</mat-label>\r\n        <input matInput [matDatepicker]=\"pickerEnd\" required>\r\n        <mat-hint>DD/MM/YYYY</mat-hint>\r\n        <mat-datepicker-toggle matIconSuffix [for]=\"pickerEnd\"></mat-datepicker-toggle>\r\n        <mat-datepicker #pickerEnd></mat-datepicker>\r\n        <mat-error>La date de fin ne peut pas être vide.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [className]=\"'form-group'\">\r\n      <mat-label>Adresse</mat-label>\r\n      <input type=\"text\" placeholder=\"Rechercher une adresse\" aria-label=\"Adresse\" matInput\r\n             [matAutocomplete]=\"auto\" required>\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        @for (option of options; track option) {\r\n          <mat-option [value]=\"option\">\r\n            {{option}}\r\n          </mat-option>\r\n        }\r\n      </mat-autocomplete>\r\n      <mat-error>L'adresse ne peut pas être vide.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <app-button [solid]=\"true\" [type]=\"'primary'\" label=\"Mettre à jour\" id=\"submit\"/>\r\n  </form>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AddInventoryFormPageComponent",
            "id": "component-AddInventoryFormPageComponent-24c6325b6406024593b22c55d3446550ea45d391d62e603d9356e0814045cddafcfd93f1bd7652c7e6b49ad0c1ac559a7b09d1f57cee268c86b7a16e11f23ccd",
            "file": "src/app/pages/AddInventoryFormPage/AddInventoryFormPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "provideAnimations()"
                }
            ],
            "selector": "app-add-inventory-form-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./AddInventoryFormPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "options",
                    "defaultValue": "[{value: '1', label: 'Option 1'}]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "SelectComponent",
                    "type": "component"
                },
                {
                    "name": "MatFormField"
                },
                {
                    "name": "MatInput"
                },
                {
                    "name": "MatLabel"
                },
                {
                    "name": "MatError"
                },
                {
                    "name": "MatSelect"
                },
                {
                    "name": "MatOption"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\nimport { SelectComponent } from \"../../components/select/select.component\";\r\nimport { MatError, MatFormField, MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInput, MatInputModule, MatLabel } from \"@angular/material/input\";\r\nimport { MatOption, MatSelect } from \"@angular/material/select\";\r\nimport { provideAnimations } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n  selector: 'app-add-inventory-form-page',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent,\r\n    SelectComponent,\r\n    MatFormField,\r\n    MatInput,\r\n    MatLabel,\r\n    MatError,\r\n    MatSelect,\r\n    MatOption\r\n  ],\r\n  providers: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    provideAnimations()\r\n  ],\r\n  templateUrl: './AddInventoryFormPage.component.html',\r\n  styleUrl: './AddInventoryFormPage.component.css'\r\n})\r\nexport class AddInventoryFormPageComponent {\r\n  public options = [{value: '1', label: 'Option 1'}];\r\n}\r\n",
            "styleUrl": "./AddInventoryFormPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'header'\">\r\n  <a href=\"/\" [className]=\"['w-100', 'left-align']\">\r\n    <i class=\"fa-solid fa-arrow-left\"></i>\r\n  </a>\r\n  <div [className]=\"'header-container'\">\r\n    <h2>Formulaire d'inventaire</h2>\r\n  </div>\r\n\r\n  <form method=\"post\">\r\n    <mat-form-field [className]=\"'form-group'\">\r\n      <mat-label>Matériel</mat-label>\r\n      <input type=\"text\" matInput id=\"material_select\" name=\"material\"\r\n             placeholder=\"Nom du matériel\" required/>\r\n      <mat-error>Le nom du matériel ne peut pas être vide.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [className]=\"'form-group'\">\r\n      <mat-label>Salle</mat-label>\r\n      <mat-select id=\"room_select\" name=\"room\" required>\r\n        @for (option of options; track option) {\r\n          <mat-option [value]=\"option.value\">{{ option.label }}</mat-option>\r\n        }\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field [className]=\"'form-group'\">\r\n      <mat-label>Quantité</mat-label>\r\n      <input type=\"number\"  matInput id=\"quantity_input\" name=\"quantity\" placeholder=\"Nouvelle quantité disponible\"\r\n             min=\"1\" required/>\r\n      <mat-error>La quantité ne peut pas être inférieure à 1.</mat-error>\r\n    </mat-form-field>\r\n\r\n    <app-button [solid]=\"true\" [type]=\"'primary'\" label=\"Mettre à jour\" id=\"submit\"/>\r\n  </form>\r\n\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-c49609922ed219c9ef6b85a484e00e4a3766a08754cf45b2f5118800c34b09575d4d64aa2fac16c61c91df098ec570857ceb431eea6bf697bf4f81823504b61a",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "NavbarComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { NavbarComponent } from \"./components/navbar/navbar.component\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet, NavbarComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css',\r\n})\r\nexport class AppComponent {\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-navbar/>\r\n<router-outlet/>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d8b356615c8d5d164ca55eca8ff332d3b90b0aabb23e4b428e94b41c0f7263a7ed97742dcba943e0733355e6776abf2979d817ef1c447c98bdbce477bfb29a97",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "onClickLink",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "solid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"normal\" | \"primary\" | \"secondary\" | \"tertiary\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "clickFunction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { NgClass } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  standalone: true,\r\n  imports: [NgClass],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css',\r\n})\r\nexport class ButtonComponent {\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  icon: string = '';\r\n\r\n  @Input()\r\n  type: 'normal' | 'primary' | 'secondary' | 'tertiary' = 'normal';\r\n\r\n  @Input()\r\n  solid: boolean = false;\r\n\r\n  @Input()\r\n  css: string = '';\r\n\r\n  @Input()\r\n  onClickLink: string = '';\r\n\r\n  public get classes(): string[] {\r\n    const mode =\r\n      this.type == 'primary'\r\n        ? 'btn-primary'\r\n        : this.type == 'secondary'\r\n          ? 'btn-secondary'\r\n          : this.type == 'tertiary'\r\n            ? 'btn-tertiary'\r\n            : '';\r\n\r\n    return ['btn', mode, this.solid ? 'btn-solid' : '', this.css];\r\n  }\r\n\r\n  public clickFunction() {\r\n    if (this.onClickLink != '') {\r\n      document.location.href = this.onClickLink;\r\n    }\r\n  }\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 30
                    }
                }
            },
            "templateData": "<button [ngClass]=\"classes\" (click)=\"clickFunction()\">\r\n  <i [className]=\"icon\"></i>\r\n  {{ label }}\r\n</button>\r\n"
        },
        {
            "name": "CalendarComponent",
            "id": "component-CalendarComponent-d85b3e9f7db5e89f0163fd9f4da18ae1aeac506fb12d5fd7cdea330c60189ecf3b563afbd0c4c52834518b504756abcba6bd5cbebf30fca39d029d99e419af57",
            "file": "src/app/components/calendar/calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "provideNativeDateAdapter()"
                }
            ],
            "selector": "app-calendar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./calendar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "calendarComponent",
                    "defaultValue": "new FullCalendarComponent({} as ElementRef, {} as ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FullCalendarComponent",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'calendar'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "calendarOptions",
                    "defaultValue": "{\r\n    contentHeight: \"auto\",\r\n    eventClick: this.handleEventClick.bind(this),\r\n    events: this.events,\r\n    handleWindowResize: false,\r\n    headerToolbar: {\r\n      start: \"title\",\r\n      center: \"\",\r\n      end: \"today prev,next dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\r\n    },\r\n    initialView: \"dayGridMonth\",\r\n    locale: frLocale,\r\n    plugins: [dayGridPlugin, listPlugin, timeGridPlugin],\r\n    timeZone: \"Europe/Paris\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CalendarOptions",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "calendarView",
                    "defaultValue": "'dayGridMonth'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "event",
                    "defaultValue": "{} as EventInterface",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventInterface",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "events",
                    "defaultValue": "[\r\n    { title: 'event 1', start: new Date(2024, 5, 7), end: new Date(2024, 5, 10), location: 'Paris', status: 'confirmed' },\r\n    { title: 'event 2', start: new Date(2024, 5, 8, 9), end: new Date(2024, 5, 8, 16) }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "screenHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "screenWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "x",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "y",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "handleEventClick",
                    "args": [
                        {
                            "name": "clickedEvent",
                            "type": "EventClickArg",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "clickedEvent",
                            "type": "EventClickArg",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "setEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "EventImpl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "EventImpl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "view",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "FullCalendarModule",
                    "type": "module"
                },
                {
                    "name": "MatIcon"
                },
                {
                    "name": "DatePipe",
                    "type": "pipe"
                },
                {
                    "name": "MatFormField"
                },
                {
                    "name": "MatDatepicker"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerInput"
                },
                {
                    "name": "MatInput"
                },
                {
                    "name": "MatLabel"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, HostListener, ViewChild } from \"@angular/core\";\r\nimport { FullCalendarComponent, FullCalendarModule } from \"@fullcalendar/angular\";\r\nimport { CalendarOptions, EventClickArg, EventSourceInput } from \"@fullcalendar/core\";\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport frLocale from '@fullcalendar/core/locales/fr';\r\nimport { MatIcon } from \"@angular/material/icon\";\r\nimport { EventImpl, Identity } from \"@fullcalendar/core/internal\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { MatFormField } from \"@angular/material/form-field\";\r\nimport { MatDatepicker, MatDatepickerInput, MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatInput, MatLabel } from \"@angular/material/input\";\r\nimport { provideNativeDateAdapter } from \"@angular/material/core\";\r\n\r\nexport interface EventInterface {\r\n  title: string,\r\n  date_start: Date,\r\n  date_end: Date,\r\n  location: string,\r\n  status: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  standalone: true,\r\n  imports: [\r\n    FullCalendarModule,\r\n    MatIcon,\r\n    DatePipe,\r\n    MatFormField,\r\n    MatDatepicker,\r\n    FormsModule,\r\n    MatDatepickerInput,\r\n    MatInput,\r\n    MatLabel\r\n  ],\r\n  providers: [\r\n    MatDatepickerModule,\r\n    provideNativeDateAdapter()\r\n  ],\r\n  templateUrl: './calendar.component.html',\r\n  styleUrl: './calendar.component.css'\r\n})\r\nexport class CalendarComponent {\r\n  @ViewChild(\"calendar\")\r\n  calendarComponent: FullCalendarComponent = new FullCalendarComponent({} as ElementRef, {} as ChangeDetectorRef);\r\n\r\n  private calendarView: string = 'dayGridMonth'\r\n\r\n  private screenHeight : number = 0;\r\n  private screenWidth : number = 0;\r\n\r\n  protected event: EventInterface = {} as EventInterface;\r\n\r\n  protected events = [\r\n    { title: 'event 1', start: new Date(2024, 5, 7), end: new Date(2024, 5, 10), location: 'Paris', status: 'confirmed' },\r\n    { title: 'event 2', start: new Date(2024, 5, 8, 9), end: new Date(2024, 5, 8, 16) }\r\n  ];\r\n\r\n  public x: number = 0;\r\n  public y: number = 0;\r\n\r\n  @HostListener('window:resize', ['$event']) onResize() {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n    this.view()\r\n  }\r\n\r\n  private view() {\r\n    if(this.screenWidth <= 425) {\r\n      this.calendarView = 'listWeek';\r\n    } else {\r\n      this.calendarView = 'dayGridMonth';\r\n    }\r\n    this.calendarComponent.getApi().changeView(this.calendarView);\r\n  }\r\n\r\n  calendarOptions: CalendarOptions = {\r\n    contentHeight: \"auto\",\r\n    eventClick: this.handleEventClick.bind(this),\r\n    events: this.events,\r\n    handleWindowResize: false,\r\n    headerToolbar: {\r\n      start: \"title\",\r\n      center: \"\",\r\n      end: \"today prev,next dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\r\n    },\r\n    initialView: \"dayGridMonth\",\r\n    locale: frLocale,\r\n    plugins: [dayGridPlugin, listPlugin, timeGridPlugin],\r\n    timeZone: \"Europe/Paris\"\r\n  };\r\n\r\n  public setEvent(event: EventImpl) {\r\n    this.event = {title: event.title, date_start: event.start, date_end: event.end, location: event.extendedProps['location'], status: event.extendedProps['status']} as EventInterface;\r\n  }\r\n\r\n  public closeDialog() {\r\n    let dialog = document.getElementById(\"dialog\") as HTMLDialogElement;\r\n    dialog.close();\r\n  }\r\n\r\n  public handleEventClick(clickedEvent: EventClickArg) {\r\n    clickedEvent.jsEvent.preventDefault();\r\n    let coordinates = clickedEvent.el.getBoundingClientRect();\r\n    this.setEvent(clickedEvent.event);\r\n    let dialog = document.getElementById(\"dialog\") as HTMLDialogElement;\r\n    if(coordinates.left - 448 > 0) {\r\n      this.x = coordinates.left - 448;\r\n    } else {\r\n      this.x = coordinates.right;\r\n    }\r\n    if (this.screenHeight - coordinates.top < 220) {\r\n      this.y = coordinates.top - 220;\r\n    } else {\r\n      this.y = coordinates.top;\r\n    }\r\n    dialog.style.left = this.x + \"px\";\r\n    dialog.style.top = this.y + \"px\";\r\n    dialog.show();\r\n  }\r\n}\r\n",
            "styleUrl": "./calendar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<full-calendar #calendar [options]=\"calendarOptions\"></full-calendar>\r\n<dialog id=\"dialog\">\r\n  <div class=\"dialog-header\">\r\n    <h3>{{event.title}}</h3>\r\n    <span (click)=\"closeDialog()\" class=\"btn-close\">\r\n      <mat-icon fontIcon=\"close\"></mat-icon>\r\n    </span>\r\n  </div>\r\n  <mat-form-field>\r\n    <mat-label>Début</mat-label>\r\n    <input matInput [matDatepicker]=\"picker\" placeholder=\"Début\" [(ngModel)]=\"event.date_start\">\r\n    <mat-datepicker #picker></mat-datepicker>\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Fin</mat-label>\r\n    <input matInput [matDatepicker]=\"picker_end\" placeholder=\"Fin\" [(ngModel)]=\"event.date_end\">\r\n    <mat-datepicker #picker_end></mat-datepicker>\r\n  </mat-form-field>\r\n  <p>Statut: {{event.status}}</p>\r\n  <p>Lieu: {{event.location}}</p>\r\n</dialog>\r\n"
        },
        {
            "name": "ChecklistItemComponent",
            "id": "component-ChecklistItemComponent-063e6a71abdb34b212b754ca70ef08cdf0921f3497993eedd6a9de665d1a2e5ac0d704f9f6333d6986eee8a0132e9d93ad5db745cf41b57de09c047461415f0c",
            "file": "src/app/components/checklistItem/ChecklistItem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checklist-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ChecklistItem.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "ChecklistItem[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "setVisible",
                    "args": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "ChecklistItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgForOf"
                },
                {
                    "name": "RemoveSpecialCharactersPipe",
                    "type": "pipe"
                },
                {
                    "name": "LowerCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { LowerCasePipe, NgForOf } from \"@angular/common\";\r\nimport { RemoveSpecialCharactersPipe } from \"../../pipes/removeSpecialCharacters.pipe\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\n\r\nexport interface ChecklistItem {\r\n  name: string,\r\n  quantity: number,\r\n  checked: boolean,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-checklist-item',\r\n  standalone: true,\r\n  imports: [\r\n    NgForOf,\r\n    RemoveSpecialCharactersPipe,\r\n    LowerCasePipe,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './ChecklistItem.component.html',\r\n  styleUrl: './ChecklistItem.component.css',\r\n  schemas: [NO_ERRORS_SCHEMA]\r\n})\r\nexport class ChecklistItemComponent {\r\n  @Input()\r\n  items: ChecklistItem[] = [];\r\n\r\n  public setVisible(item: ChecklistItem) {\r\n    item.checked = !item.checked;\r\n    document.getElementById(new RemoveSpecialCharactersPipe().transform(item.name).toLowerCase() + \"_div\")?.setAttribute(\"checked\", item.checked.toString());\r\n  }\r\n}\r\n",
            "styleUrl": "./ChecklistItem.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngFor=\"let item of items\" [className]=\"'item'\" (click)=\"setVisible(item)\" [id]=\"(item.name | lowercase |\r\nremoveSpecialCharacters) + '_div'\" checked=\"{{item.checked}}\">\r\n  <div [className]=\"'item_checkbox'\">\r\n    <i class=\"fa-solid fa-check\"></i>\r\n  </div>\r\n  <div [className]=\"'item_info'\">\r\n    <p>{{item.quantity}} {{item.name}}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EventListPageComponent",
            "id": "component-EventListPageComponent-042b92b91233467f46803951c223852577ef23783b6df0b40cc72f322ab3c58aa3a1da098d987f1a8c774e25a4cb5fdda817677c6b90913623b6ab6e21e3edfc",
            "file": "src/app/pages/EventListPage/EventListPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-event-list-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./EventListPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentView",
                    "defaultValue": "'calendar'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "event",
                    "defaultValue": "{\r\n    title: \"Test\",\r\n    date_start: new Date(2024, 6, 10),\r\n    date_end: new Date(2024, 6, 12),\r\n    location: \"Paris\",\r\n    status: \"En cours\"\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventInterface",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeView",
                    "args": [
                        {
                            "name": "view",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "view",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CalendarComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "NgIf"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CalendarComponent, EventInterface } from \"../../components/calendar/calendar.component\";\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\nimport { NgIf } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-event-list-page',\r\n  standalone: true,\r\n  imports: [\r\n    CalendarComponent,\r\n    ButtonComponent,\r\n    NgIf,\r\n  ],\r\n  templateUrl: './EventListPage.component.html',\r\n  styleUrl: './EventListPage.component.css'\r\n})\r\nexport class EventListPageComponent {\r\n  protected currentView: string = 'calendar';\r\n\r\n  public event : EventInterface = {\r\n    title: \"Test\",\r\n    date_start: new Date(2024, 6, 10),\r\n    date_end: new Date(2024, 6, 12),\r\n    location: \"Paris\",\r\n    status: \"En cours\"\r\n  }\r\n\r\n  public changeView(view: string) {\r\n    this.currentView = view;\r\n  }\r\n}\r\n",
            "styleUrl": "./EventListPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'header'\">\r\n  <a href=\"/\" [className]=\"['w-100', 'left-align']\">\r\n    <i class=\"fa-solid fa-arrow-left\"></i>\r\n  </a>\r\n  <div [className]=\"'header-container'\">\r\n    <h2>Événements</h2>\r\n  </div>\r\n\r\n  <div class=\"d-flex\">\r\n    <app-button label=\"Calendrier\" (click)=\"changeView('calendar')\"/>\r\n    <app-button label=\"Status\" (click)=\"changeView('status')\"/>\r\n  </div>\r\n\r\n  <div id=\"calendarView\" *ngIf=\"currentView == 'calendar'\">\r\n    <app-calendar/>\r\n  </div>\r\n  <div id=\"statusView\" *ngIf=\"currentView == 'status'\">\r\n\r\n  </div>\r\n\r\n  <app-button label=\"Créer un événement\" type=\"primary\" [solid]=\"true\" onClickLink=\"/event/add\"/>\r\n</div>\r\n"
        },
        {
            "name": "HomePageComponent",
            "id": "component-HomePageComponent-a9788a1f6c9c870b87773b22405d0c95e14b6fbc3b0391bfb52fc5ebda480f44da026dec29ae68397d4cb8ca4b42cd9ef2c5540085cd300dbf6acd9620a69c79",
            "file": "src/app/pages/HomePage/HomePage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./HomePage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './HomePage.component.html',\r\n  styleUrl: './HomePage.component.css'\r\n})\r\nexport class HomePageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./HomePage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <img src=\"assets/img/logos/logo-ISEN-vertical.png\" alt=\"Logo ISEN Méditerranée\" class=\"mt-4\">\r\n\r\n  <img src=\"assets/img/icons/ISEN-bulles.png\" alt=\"Bulles ISEN\" class=\"'m-4'\">\r\n\r\n  <p class=\"mb-4\">Bonjour <b>username</b>👋</p>\r\n\r\n  <div id=\"actionButtons\">\r\n    <app-button type=\"primary\" label=\"Evénements\" [solid]=\"true\" onClickLink=\"/event/list\"/>\r\n    <app-button type=\"primary\" label=\"Gestion du stock\" [solid]=\"true\" css=\"mt-2\" onClickLink=\"/stock\"/>\r\n    <app-button type=\"secondary\" label=\"Se déconnecter\" [solid]=\"true\" css=\"mt-8\"/>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "IMSListPageComponent",
            "id": "component-IMSListPageComponent-60b3b17dbe3bb4c7f51aa2df97fb23da64fb7a7abd5602d4095ab10e1b07c5740b09e173ac4af49928aefdba4962a32616df63f2bd34873da97e6f6243b901c3",
            "file": "src/app/pages/IMSListPage/IMSListPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-imslist-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./IMSListPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-imslist-page',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './IMSListPage.component.html',\r\n  styleUrl: './IMSListPage.component.css'\r\n})\r\nexport class IMSListPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./IMSListPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'header'\">\r\n  <a href=\"/\" [className]=\"['w-100', 'left-align']\">\r\n    <i class=\"fa-solid fa-arrow-left\"></i>\r\n  </a>\r\n  <div [className]=\"'header-container'\">\r\n    <h2>Gestion du stock</h2>\r\n  </div>\r\n\r\n  <app-button type=\"secondary\" label=\"Ajouter un matériel\" [solid]=\"true\" onClickLink=\"/stock/add\"></app-button>\r\n</div>\r\n"
        },
        {
            "name": "LogInPageComponent",
            "id": "component-LogInPageComponent-0d154f669ba53a1419572aa8e3339d4299fddb5c9194216ff91f52a44d20e42f31c3d45cb57fea0d2867714aac97247faf21d830742cc1249b281434feb8c1ea",
            "file": "src/app/pages/LogInPage/LogInPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-log-in-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./LogInPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgOptimizedImage"
                },
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { NgClass, NgOptimizedImage } from \"@angular/common\";\r\n\r\n@Component({\r\n  selector: 'app-log-in-page',\r\n  standalone: true,\r\n  imports: [\r\n    NgOptimizedImage,\r\n    NgClass\r\n  ],\r\n  templateUrl: './LogInPage.component.html',\r\n  styleUrl: './LogInPage.component.css'\r\n})\r\nexport class LogInPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./LogInPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\r\n  <img src=\"assets/img/logos/logo-ISEN-vertical.png\" alt=\"Logo ISEN Méditerranée\" [ngClass]=\"'m-4'\">\r\n\r\n  <img src=\"assets/img/icons/ISEN-bulles.png\" alt=\"Bulles ISEN\" [ngClass]=\"'m-4'\">\r\n\r\n  <p>Bonjour 👋</p>\r\n\r\n  <a href=\"\" [ngClass]=\"['btn-microsoft', 'm-4']\">\r\n    <img ngSrc=\"assets/img/logos/logoMicrosoft.png\" width=\"40\" height=\"40\" alt=\"Logo Microsoft\"/>\r\n    Connexion avec Microsoft\r\n  </a>\r\n</div>\r\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-464450137d94ee08c4281566e6f648d3136b2627689de6f7cf1125db8805c0652b7b4027783bf2f72111e3d49123e135474c44080daa218d3250485c9b6b8179",
            "file": "src/app/components/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "router",
                    "defaultValue": "{} as Router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "screenHeight",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "screenWidth",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "MatIcon"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, Input } from \"@angular/core\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\nimport { Router, RouterLink, RouterLinkActive } from \"@angular/router\";\r\nimport { MatIcon } from \"@angular/material/icon\";\r\nimport { routes } from \"../../app.routes\";\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent,\r\n    RouterLinkActive,\r\n    RouterLink,\r\n    MatIcon\r\n  ],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrl: './navbar.component.css'\r\n})\r\nexport class NavbarComponent {\r\n  private screenHeight : number = 0;\r\n  private screenWidth : number = 0;\r\n\r\n  @Input()\r\n  public css: string = '';\r\n\r\n  protected router : Router = {} as Router;\r\n\r\n  constructor(router : Router) {\r\n    this.onResize()\r\n    this.router = router;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event']) onResize() {\r\n    this.screenHeight = window.innerHeight;\r\n    this.screenWidth = window.innerWidth;\r\n  }\r\n\r\n  public get classes(): string {\r\n    let cssClasses = ['w-100'];\r\n    if (this.css) {\r\n      cssClasses.push(this.css);\r\n    }\r\n    if([\"/\", \"/home\", \"/login\"].includes(this.router.url)) {\r\n      cssClasses.push('d-none');\r\n    }\r\n    if (this.screenWidth <= 1024) {\r\n      cssClasses.push('sticky-bottom', 'navbar-mobile');\r\n    } else {\r\n      cssClasses.push('sticky-top');\r\n    }\r\n    return cssClasses.join(' ')\r\n  }\r\n}\r\n",
            "styleUrl": "./navbar.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "string",
                        "returnType": "string",
                        "line": 38
                    }
                }
            },
            "templateData": "<nav [className]=\"classes\">\r\n  <ul>\r\n    <li>\r\n      <a [routerLink]=\"['/home']\" [routerLinkActive]=\"'active'\">\r\n        <mat-icon fontIcon=\"home\"/>\r\n        Accueil\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/stock']\" [routerLinkActive]=\"'active'\">\r\n        <mat-icon fontIcon=\"inventory\"/>\r\n        Stock\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/event/list']\" [routerLinkActive]=\"'active'\">\r\n        <mat-icon fontIcon=\"calendar_month\"/>\r\n        Événements\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a [routerLink]=\"['/logout']\" [routerLinkActive]=\"'active'\">\r\n        <mat-icon fontIcon=\"logout\"/>\r\n        Déconnexion\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n"
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-5bbc76215a4f90e2e8fa45e5f33dc906c2ec2ccc6ce5a14b96dbec8541b7a820d71b87e64155433301ee23ed9321d599fca59537ce2377fe0360ff51c0f05f06",
            "file": "src/app/components/select/select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-select",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./select.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "css",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "SelectOptions[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgForOf"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { NgForOf } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nexport interface SelectOptions {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-select',\r\n  standalone: true,\r\n  imports: [NgForOf, ReactiveFormsModule],\r\n  templateUrl: './select.component.html',\r\n  styleUrl: './select.component.css',\r\n})\r\nexport class SelectComponent {\r\n  @Input()\r\n  options: SelectOptions[] = [];\r\n\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  name: string = '';\r\n\r\n  @Input()\r\n  id: string = '';\r\n\r\n  @Input()\r\n  css: string = '';\r\n}\r\n",
            "styleUrl": "./select.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<select [id]=\"id\" [name]=\"name\" [className]=\"css\">\r\n  <option *ngFor=\"let option of options\" [value]=\"option.value\">\r\n    {{ option.label }}\r\n  </option>\r\n</select>\r\n"
        },
        {
            "name": "StockItemComponent",
            "id": "component-StockItemComponent-eddee92116f0b82a8716c0182f6f2fc24e37c1d6d6ec4e9a6f122f5aa0ddd1accf8c4690779045ecfa4fff71235c609e4615a1126b7e4359bb0fd9514e1a7727",
            "file": "src/app/components/stockItem/stock-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-stock-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./stock-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "image",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "quantity",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "room",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { ButtonComponent } from \"../button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-stock-item',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './stock-item.component.html',\r\n  styleUrl: './stock-item.component.css'\r\n})\r\nexport class StockItemComponent {\r\n\r\n  @Input()\r\n  title: string = '';\r\n\r\n  @Input()\r\n  room: string = '';\r\n\r\n  @Input()\r\n  quantity: number = 0;\r\n\r\n  @Input()\r\n  image: string = '';\r\n}\r\n",
            "styleUrl": "./stock-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div>\r\n  <div>\r\n    <img src=\"{{image}}\" alt=\"{{title}}\" />\r\n  </div>\r\n  <div>\r\n    <h5>{{title}}</h5>\r\n    <p>Salle: {{room}}</p>\r\n    <p>Quantité: {{quantity}}</p>\r\n  </div>\r\n</div>\r\n\r\n<app-button type=\"primary\" [solid]=\"true\" label=\"Ajouter un matériel\"></app-button>\r\n"
        },
        {
            "name": "SuccessPageComponent",
            "id": "component-SuccessPageComponent-cd975e567378af3875f1c7340a12b17b0893128bd02ef62e56d22fbb2decf7ef19eca8d3905d4d1f27ca1d2f1e8de3452382f9579303762fc1077ac0182ecd7d",
            "file": "src/app/pages/SucessPage/SuccessPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-success-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./SuccessPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "text",
                    "defaultValue": "\"Successful\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from \"@angular/core\";\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-success-page',\r\n  standalone: true,\r\n  imports: [\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './SuccessPage.component.html',\r\n  styleUrl: './SuccessPage.component.css'\r\n})\r\nexport class SuccessPageComponent {\r\n  @Input()\r\n  text: string = \"Successful\";\r\n}\r\n",
            "styleUrl": "./SuccessPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'container h-100'\">\r\n    <img src=\"assets/img/icons/ISEN-bulles.png\" alt=\"ISEN bulles\">\r\n    <b [className]=\"'mb-25'\">{{text}}</b>\r\n\r\n  <div [className]=\"'w-100'\">\r\n    <app-button [label]=\"'Retour'\" [type]=\"'primary'\" [solid]=\"true\" [onClickLink]=\"'/home'\"/>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "UpdateEventFormPageComponent",
            "id": "component-UpdateEventFormPageComponent-5bfbb5d1c1eda899de56e5ded24d4757428f8426fccaba8d4be00a1e63580b25c37703d6ccda12583f91ef8c290625aa010e6c2d209c491dcef908b9c0f23e97",
            "file": "src/app/pages/UpdateEventFormPage/UpdateEventFormPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-update-event-form-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./UpdateEventFormPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-event-form-page',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './UpdateEventFormPage.component.html',\r\n  styleUrl: './UpdateEventFormPage.component.css'\r\n})\r\nexport class UpdateEventFormPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./UpdateEventFormPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>update-event-form-page works!</p>\r\n"
        },
        {
            "name": "UpdateInventoryFormPageComponent",
            "id": "component-UpdateInventoryFormPageComponent-8c97d7c1b26db2340f1e222040408e6796b4d3e90cd0e11683746333e27d3ada6068ce4c82e30756444dcb0f591b434e0d401772a2b37fd0efbb6b2796fa4f75",
            "file": "src/app/pages/UpdateInventoryFormPage/UpdateInventoryFormPage.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-inventory-form-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./UpdateInventoryFormPage.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "SelectComponent",
                    "type": "component"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { SelectComponent } from \"../../components/select/select.component\";\r\nimport { ButtonComponent } from \"../../components/button/button.component\";\r\n\r\n@Component({\r\n  selector: 'app-inventory-form-page',\r\n  standalone: true,\r\n  imports: [\r\n    SelectComponent,\r\n    ButtonComponent\r\n  ],\r\n  templateUrl: './UpdateInventoryFormPage.component.html',\r\n  styleUrl: './UpdateInventoryFormPage.component.css'\r\n})\r\nexport class UpdateInventoryFormPageComponent {\r\n\r\n}\r\n",
            "styleUrl": "./UpdateInventoryFormPage.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div [className]=\"'header'\">\r\n  <a href=\"/\" [className]=\"['w-100', 'left-align']\">\r\n    <i class=\"fa-solid fa-arrow-left\"></i>\r\n  </a>\r\n  <div [className]=\"'header-container'\">\r\n    <h2>Formulaire d'inventaire</h2>\r\n  </div>\r\n\r\n  <form method=\"post\">\r\n    <div [className]=\"'form-group'\">\r\n      <label for=\"material_select\">Matériel</label>\r\n      <app-select id=\"material_select\" name=\"material\"\r\n                  [options]=\"[{value: 'none', label: '--- Choisir un matériel --'}]\"/>\r\n    </div>\r\n\r\n    <div [className]=\"'form-group'\">\r\n      <label for=\"room_select\">Salle</label>\r\n      <app-select id=\"room_select\" name=\"room\" [options]=\"[{value: 'none', label: '--- Choisir une salle --'}]\"/>\r\n    </div>\r\n\r\n    <div [className]=\"'form-group'\">\r\n      <label for=\"quantity_input\">Quantité</label>\r\n      <input type=\"number\" id=\"quantity_input\" name=\"quantity\" placeholder=\"Nouvelle quantité disponible\"/>\r\n    </div>\r\n\r\n    <app-button [solid]=\"true\" [type]=\"'primary'\" label=\"Mettre à jour\" id=\"submit\"/>\r\n  </form>\r\n\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideAnimationsAsync(), {provide: LOCALE_ID, useValue: 'fr-fr'}]\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideAnimationsAsync(), {provide: LOCALE_ID, useValue: 'fr-fr'}]\r\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calendar/calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/calendar/calendar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EventInterface",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checklistItem/ChecklistItem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChecklistItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checklistItem/ChecklistItem.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ChecklistItem",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select/select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/stockItem/stock-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StockItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/AddEventFormPage/AddEventFormPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddEventFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/AddInventoryFormPage/AddInventoryFormPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddInventoryFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/EventListPage/EventListPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EventListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/HomePage/HomePage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/IMSListPage/IMSListPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IMSListPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/LogInPage/LogInPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogInPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/SucessPage/SuccessPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuccessPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/UpdateEventFormPage/UpdateEventFormPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateEventFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/UpdateInventoryFormPage/UpdateInventoryFormPage.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateInventoryFormPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/removeSpecialCharacters.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SpecialCharactersMap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/removeSpecialCharacters.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RemoveSpecialCharactersPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}